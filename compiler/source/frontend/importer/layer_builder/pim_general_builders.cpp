#include "importer/layer_builder/layer_builder.h"
#include "new_ir/include/common/log.hpp"
#include "new_ir/include/tensors/data_tensor.h"

#define DECLARE_TORCH_OP_BUILDER(op_name, type_name, layer_name)                                         \
  namespace nn_compiler {                                                                                \
  namespace frontend {                                                                                   \
  using nn_compiler::ir::DTensor;                                                                        \
  using nn_compiler::ir::STensor;                                                                        \
  std::shared_ptr<ir::NNLayer> op_name##Builder::buildLayer(const torch::jit::Node *node_ref) {          \
    Log::NIR::I() << "build " << #type_name;                                                             \
    std::string type = type_name;                                                                        \
    std::string name = "";                                                                               \
    layer_name = std::make_shared<ir::op_name##Layer>(name, type);                                       \
    const auto& layer = std::dynamic_pointer_cast<ir::NNLayer>(layer_name);                               \
    return layer;                                                                                        \
  }                                                                                                      \
  }                                                                                                      \
  }  // namespace nn_compiler

DECLARE_TORCH_OP_BUILDER(AtenAdd, "aten::add", aten_add_layer_)
DECLARE_TORCH_OP_BUILDER(AtenAnd, "aten::__and__", aten_and_layer_)
DECLARE_TORCH_OP_BUILDER(AtenAddmm, "aten::addmm", aten_addmm_layer_)
DECLARE_TORCH_OP_BUILDER(AtenAny, "aten::any", aten_any_layer_)
DECLARE_TORCH_OP_BUILDER(AtenAppend, "aten::append", aten_append_layer_)
DECLARE_TORCH_OP_BUILDER(AtenArange1, "aten::arange1", aten_arange_layer_)
DECLARE_TORCH_OP_BUILDER(AtenArange2, "aten::arange2", aten_arange_layer_)
DECLARE_TORCH_OP_BUILDER(AtenArange3, "aten::arange3", aten_arange_layer_)
DECLARE_TORCH_OP_BUILDER(AtenAsTensor, "aten::as_tensor", aten_as_tensor_layer_)
DECLARE_TORCH_OP_BUILDER(AtenBitwiseNot, "aten::bitwise_not",aten_bitwise_not_layer_)
DECLARE_TORCH_OP_BUILDER(AtenBmm, "aten::bmm",aten_bmm_layer_)
DECLARE_TORCH_OP_BUILDER(AtenBool, "aten::Bool", aten_bool_layer_)
DECLARE_TORCH_OP_BUILDER(AtenCat, "aten::cat", aten_cat_layer_)
DECLARE_TORCH_OP_BUILDER(AtenCeil, "aten::ceil", aten_ceil_layer_)
DECLARE_TORCH_OP_BUILDER(AtenChunk, "aten::chunk", aten_chunk_layer_)
DECLARE_TORCH_OP_BUILDER(AtenClamp, "aten::clamp", aten_clamp_layer_)
DECLARE_TORCH_OP_BUILDER(AtenClear, "aten::clear", aten_clear_layer_)
DECLARE_TORCH_OP_BUILDER(AtenContiguous, "aten::contiguous", aten_contiguous_layer_)
DECLARE_TORCH_OP_BUILDER(AtenCopy, "aten::copy_", aten_copy_layer_)
DECLARE_TORCH_OP_BUILDER(AtenCpu, "aten::cpu", aten_cpu_layer_)
DECLARE_TORCH_OP_BUILDER(AtenCuda, "aten::cuda", aten_cuda_layer_)
DECLARE_TORCH_OP_BUILDER(AtenDeriveIndex, "aten::__derive_index", aten_derive_index_layer_)
DECLARE_TORCH_OP_BUILDER(AtenDim, "aten::dim", aten_dim_layer_)
DECLARE_TORCH_OP_BUILDER(AtenDiv, "aten::div", aten_div_layer_)
DECLARE_TORCH_OP_BUILDER(AtenDropout, "aten::dropout", aten_dropout_layer_)
DECLARE_TORCH_OP_BUILDER(AtenEmbedding, "aten::embedding", aten_embedding_layer_)
DECLARE_TORCH_OP_BUILDER(AtenEq, "aten::eq", aten_eq_layer_)
DECLARE_TORCH_OP_BUILDER(AtenEqual, "aten::equal", aten_equal_layer_)
DECLARE_TORCH_OP_BUILDER(AtenExpand, "aten::expand", aten_expand_layer_)
DECLARE_TORCH_OP_BUILDER(AtenFill, "aten::fill_", aten_fill_layer_)
DECLARE_TORCH_OP_BUILDER(AtenFloorDivide, "aten::floor_divide", aten_floor_divide_layer_)
DECLARE_TORCH_OP_BUILDER(AtenFormat, "aten::format", aten_format_layer_)
DECLARE_TORCH_OP_BUILDER(AtenGather, "aten::gather", aten_gather_layer_)
DECLARE_TORCH_OP_BUILDER(AtenGe, "aten::ge", aten_ge_layer_)
DECLARE_TORCH_OP_BUILDER(AtenGetItem, "aten::__getitem__", aten_get_item_layer_)
DECLARE_TORCH_OP_BUILDER(AtenGt, "aten::gt", aten_gt_layer_)
DECLARE_TORCH_OP_BUILDER(AtenIndex, "aten::index", aten_index_layer_)
DECLARE_TORCH_OP_BUILDER(AtenIndexPut, "aten::index_put_", aten_index_put_layer_)
DECLARE_TORCH_OP_BUILDER(AtenIndexSelect, "aten::index_select", aten_index_select_layer_)
DECLARE_TORCH_OP_BUILDER(AtenInt, "aten::Int", aten_int_layer_)
DECLARE_TORCH_OP_BUILDER(AtenIs, "aten::__is__", aten_is_layer_)
DECLARE_TORCH_OP_BUILDER(AtenItem, "aten::item", aten_item_layer_)
DECLARE_TORCH_OP_BUILDER(AtenLeakyRelu, "aten::leaky_relu", aten_leaky_relu_layer_)
DECLARE_TORCH_OP_BUILDER(AtenLen, "aten::len", aten_len_layer_)
DECLARE_TORCH_OP_BUILDER(AtenList, "aten::list", aten_list_layer_)
DECLARE_TORCH_OP_BUILDER(AtenLog, "aten::log", aten_log_layer_)
DECLARE_TORCH_OP_BUILDER(AtenLogSoftmax, "aten::log_softmax", aten_log_softmax_layer_)
DECLARE_TORCH_OP_BUILDER(AtenLt, "aten::lt", aten_lt_layer_)
DECLARE_TORCH_OP_BUILDER(AtenMaskedFill, "aten::masked_fill", aten_masked_fill_layer_)
DECLARE_TORCH_OP_BUILDER(AtenMaskedSelect, "aten::masked_select", aten_masked_select_layer_)
DECLARE_TORCH_OP_BUILDER(AtenMatmul, "aten::matmul", aten_matmul_layer_)
DECLARE_TORCH_OP_BUILDER(AtenMax, "aten::max", aten_max_layer_)
DECLARE_TORCH_OP_BUILDER(AtenMaxPool2d, "aten::max_pool2d", aten_max_pool2d_layer_)
DECLARE_TORCH_OP_BUILDER(AtenMin, "aten::min", aten_min_layer_)
DECLARE_TORCH_OP_BUILDER(AtenMul, "aten::mul", aten_mul_layer_)
DECLARE_TORCH_OP_BUILDER(AtenNe, "aten::ne", aten_ne_layer_)
DECLARE_TORCH_OP_BUILDER(AtenNeg, "aten::neg", aten_neg_layer_)
DECLARE_TORCH_OP_BUILDER(AtenNorm, "aten::norm", aten_norm_layer_)
DECLARE_TORCH_OP_BUILDER(AtenNot, "aten::__not__", aten_not_layer_)
DECLARE_TORCH_OP_BUILDER(AtenOnes, "aten::ones", aten_ones_layer_)
DECLARE_TORCH_OP_BUILDER(AtenPackPaddedSequence, "aten::_pack_padded_sequence", aten_pack_padded_sequence_layer_)
DECLARE_TORCH_OP_BUILDER(AtenPadPackedSequence, "aten::_pad_packed_sequence", aten_pad_packed_sequence_layer_)
DECLARE_TORCH_OP_BUILDER(AtenPow, "aten::pow", aten_pow_layer_)
DECLARE_TORCH_OP_BUILDER(AtenRelu, "aten::relu", aten_relu_layer_)
DECLARE_TORCH_OP_BUILDER(AtenReshape, "aten::reshape", aten_reshape_layer_)
DECLARE_TORCH_OP_BUILDER(AtenSelect, "aten::select", aten_select_layer_)
DECLARE_TORCH_OP_BUILDER(AtenSetItem, "aten::_set_item", aten_set_item_layer_)
DECLARE_TORCH_OP_BUILDER(AtenSize, "aten::size", aten_size_layer_)
DECLARE_TORCH_OP_BUILDER(AtenSlice, "aten::slice", aten_slice_layer_)
DECLARE_TORCH_OP_BUILDER(AtenSoftmax, "aten::softmax", aten_softmax_layer_)
DECLARE_TORCH_OP_BUILDER(AtenSqueeze, "aten::squeeze", aten_squeeze_layer_)
DECLARE_TORCH_OP_BUILDER(AtenSub, "aten::sub", aten_sub_layer_)
DECLARE_TORCH_OP_BUILDER(AtenSum, "aten::sum", aten_sum_layer_)
DECLARE_TORCH_OP_BUILDER(AtenTanh, "aten::tanh", aten_tanh_layer_)
DECLARE_TORCH_OP_BUILDER(AtenTensor, "aten::tensor", aten_tensor_layer_)
DECLARE_TORCH_OP_BUILDER(AtenTo1, "aten::to1", aten_to_layer_)
DECLARE_TORCH_OP_BUILDER(AtenTo2, "aten::to2", aten_to_layer_)
DECLARE_TORCH_OP_BUILDER(AtenTopk, "aten::topk", aten_topk_layer_)
DECLARE_TORCH_OP_BUILDER(AtenTranspose, "aten::transpose", aten_transpose_layer_)
DECLARE_TORCH_OP_BUILDER(AtenUnsqueeze, "aten::unsqueeze", aten_unsqueeze_layer_)
DECLARE_TORCH_OP_BUILDER(AtenView, "aten::view", aten_view_layer_)
DECLARE_TORCH_OP_BUILDER(AtenWarn, "aten::warn", aten_warn_layer_)
DECLARE_TORCH_OP_BUILDER(AtenZeros, "aten::zeros", aten_zeros_layer_)
DECLARE_TORCH_OP_BUILDER(AtenZerosLike, "aten::zeros_like", aten_zeros_like_layer_)

DECLARE_TORCH_OP_BUILDER(PrimBlock, "prim::Block", prim_block_layer_)
DECLARE_TORCH_OP_BUILDER(PrimData, "prim::data", prim_data_layer_)
DECLARE_TORCH_OP_BUILDER(PrimDevice, "prim::device", prim_device_layer_)
DECLARE_TORCH_OP_BUILDER(PrimDtype, "prim::dtype", prim_dtype_layer_)
DECLARE_TORCH_OP_BUILDER(PrimEndIf, "prim::EndIf", prim_end_if_layer_)
DECLARE_TORCH_OP_BUILDER(PrimEndLoop, "prim::EndLoop", prim_end_loop_layer_)
DECLARE_TORCH_OP_BUILDER(PrimGetAttr, "prim::GetAttr", prim_get_attr_layer_)
DECLARE_TORCH_OP_BUILDER(PrimIf, "prim::If", prim_if_layer_)
DECLARE_TORCH_OP_BUILDER(PrimInput, "prim::Input", prim_input_layer_)
DECLARE_TORCH_OP_BUILDER(PrimListConstruct, "prim::ListConstruct", prim_list_construct_layer_)
DECLARE_TORCH_OP_BUILDER(PrimListUnpack, "prim::ListUnpack", prim_list_unpack_layer_)
DECLARE_TORCH_OP_BUILDER(PrimLoop, "prim::Loop", prim_loop_layer_)
DECLARE_TORCH_OP_BUILDER(PrimLoopIndex, "prim::LoopIndex", prim_loop_index_layer_)
DECLARE_TORCH_OP_BUILDER(PrimOutput, "prim::Output", prim_output_layer_)
DECLARE_TORCH_OP_BUILDER(PrimRaiseException, "prim::RaiseException", prim_raise_exception_layer_)
DECLARE_TORCH_OP_BUILDER(PrimSetAttr, "prim::SetAttr", prim_set_attr_layer_)
DECLARE_TORCH_OP_BUILDER(PrimTupleConstruct, "prim::TupleConstruct", prim_tuple_construct_layer_)
DECLARE_TORCH_OP_BUILDER(PrimTupleIndex, "prim::TupleIndex", prim_tuple_index_layer_)
DECLARE_TORCH_OP_BUILDER(PrimTupleUnpack, "prim::TupleUnpack", prim_tuple_unpack_layer_)
DECLARE_TORCH_OP_BUILDER(PrimType, "prim::type", prim_type_layer_)
DECLARE_TORCH_OP_BUILDER(PrimUncheckedCast, "prim::unchecked_cast", prim_unchecked_cast_layer_)
DECLARE_TORCH_OP_BUILDER(PrimUninitialized, "prim::Uninitialized", prim_uninitialized_layer_)
DECLARE_TORCH_OP_BUILDER(PrimVariable, "prim::Variable", prim_variable_layer_)
